// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin-arm64", "darwin", "windows", "debian-openssl-3.0.x", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TokenType {
  VERIFY_TOKEN
  FORGET_PASSWORD_TOKEN
  MFA_TOKEN
}

enum Role {
  SUPER_ADMIN
  ADMIN
  USER
}

enum PrivilegeType {
  PROFILE_READ
  PROFILE_READ_WRITE

  PRIVILEGE_READ
  PRIVILEGE_READ_WRITE
}

model User {
  id               String      @id @default(uuid())
  firstName        String
  lastName         String
  email            String      @unique
  dob              String
  phoneNumber      String
  passwordHash     String
  role             Role        @default(USER)
  verified         Boolean     @default(false)
  active           Boolean     @default(true)
  mfa              Boolean     @default(false)
  failedLoginCount Int         @default(0)
  accountLockedAt  DateTime?
  privileges       Privilege[] // Multiple privilege IDs will be linked here
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt

  @@map("user")
}

model Token {
  id        String    @id @default(uuid())
  email     String
  token     String
  tokenType TokenType
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@unique([email, token])
  @@map("token")
}

model Privilege {
  id          String        @id @default(uuid())
  name        PrivilegeType @unique
  description String
  users       User[] // Required by Prisma for implicit many-to-many
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@map("privilege")
}
